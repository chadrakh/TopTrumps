@model IEnumerable<TopTrumpsNovus.Models.Card>

@{
    ViewData["Title"] = "Index"; 
    int deckID = 1;
    List<Card> cardList = new List<Card>();
    List<Card> drawnCardsList = new List<Card>();
}

<div class= "Game">

    @{
        foreach (var item in Model)
        {
            if ((item.DeckID) == deckID)
            {
                cardList.Add(item);
            }
        }

        ColumnNames cns = new ColumnNames();

        string[] columnNames = cns.getColumnNames(deckID);

        Random rng = new Random();
        cardList = cardList.OrderBy(a => rng.Next()).ToList();

        List<Card> playersCards = new List<Card>();
        List<Card> aisCards = new List<Card>();

        int halfOfDeck = (cardList.Count() / 2);

        for (int i = 0; i < halfOfDeck;i++)
        {
            playersCards.Add(cardList.ElementAt(i));
        }

        for (int i = halfOfDeck; i < cardList.Count(); i++)
        {
            aisCards.Add(cardList.ElementAt(i));
        }

        <div class="Cards">

            <div class="CardStyle">
                <div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-title">
                            @Html.DisplayFor(modelItem => playersCards.ElementAt(0).CardName)
                        </p>
                    </div>
                    <img src=playersCards.ElementAt(0).ImageFilePath>
                    <div class="cardInfo-container">
                        <p class="cardInfo-stat statOne">
                            @columnNames[0] <span class="statOne-value">@Html.DisplayFor(modelItem => playersCards.ElementAt(0).StatOne)</span>
                        </p>
                        <button type="button" class="selectStatBtn" onclick="handleStatSelected('statOne')">SELECT</button>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-stat statTwo">
                            @columnNames[1] @Html.DisplayFor(modelItem => playersCards.ElementAt(0).StatTwo)
                        </p>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-stat statThree">
                            @columnNames[2] @Html.DisplayFor(modelItem => playersCards.ElementAt(0).StatThree)
                        </p>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-stat statFour">
                            @columnNames[3] @Html.DisplayFor(modelItem => playersCards.ElementAt(0).StatFour)
                        </p>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-stat statFive">
                            @columnNames[4] @Html.DisplayFor(modelItem => playersCards.ElementAt(0).StatFive)
                        </p>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-stat statSix">
                            @columnNames[5] @Html.DisplayFor(modelItem => playersCards.ElementAt(0).StatSix)
                        </p>
                    </div>
                </div>
            </div>

            <div class="CardStyle">
                <div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-title">
                            @Html.DisplayFor(modelItem => playersCards.ElementAt(1).CardName)
                        </p>
                    </div>
                    <img src=playersCards.ElementAt(0).ImageFilePath>
                    <div class="cardInfo-container">
                        <p class="cardInfo-title">
                            @columnNames[0] @Html.DisplayFor(modelItem => playersCards.ElementAt(1).StatOne)
                        </p>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-title">
                            @columnNames[1] @Html.DisplayFor(modelItem => playersCards.ElementAt(1).StatTwo)
                        </p>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-title">
                            @columnNames[2] @Html.DisplayFor(modelItem => playersCards.ElementAt(1).StatThree)
                        </p>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-title">
                            @columnNames[3] @Html.DisplayFor(modelItem => playersCards.ElementAt(1).StatFour)
                        </p>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-title">
                            @columnNames[4] @Html.DisplayFor(modelItem => playersCards.ElementAt(1).StatFive)
                        </p>
                    </div>
                    <div class="cardInfo-container">
                        <p class="cardInfo-title">
                            @columnNames[5] @Html.DisplayFor(modelItem => playersCards.ElementAt(1).StatSix)
                        </p>
                    </div>
                </div>
            </div>
        
        </div>



        
}
</div>